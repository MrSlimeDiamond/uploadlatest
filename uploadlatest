#!/bin/bash

CONFIG_FILE="$HOME/.config/uploadlatest.conf"

if [ -f "$CONFIG_FILE" ]; then
	source "$CONFIG_FILE"
else
	echo "Could not find config file: $CONFIG_FILE"
	exit 1
fi


SERVICE="$DEFAULT_SERVICE"

while [[ $# -gt 0 ]]; do
    case "$1" in
        -s | --service)
            SERVICE="$2"
            shift 2
            ;;
        -h | --help)
            echo "Usage: uploadlatest [options]"
            echo "Options:"
            echo "  -s, --service <service>   Specify the service (ftp or imgur)"
            echo "  -h, --help                Display this help message"
            exit 0
            ;;
        *)
            echo "Unknown option: $1"
            exit 1
            ;;
    esac
done

# Find the latest screenshot file
latest_screenshot=$(ls -t "$LOCAL_SCREENSHOT_DIR"/*.png | head -n 1)

# Replace spaces with underscores in the filename, because imagine a URL with spaces
screenshot_filename=$(basename "$latest_screenshot")
screenshot_filename_no_spaces=$(echo "$screenshot_filename" | tr ' ' '_')

if [[ "$SERVICE" != "ftp" && "$SERVICE" != "imgur" ]]; then
    echo "Invalid service specified: $SERVICE"
    exit 1
fi

if [ "$SERVICE" == "ftp" ]; then
    # Upload using scp for FTP
    scp -P "$SSH_PORT" "$latest_screenshot" "$REMOTE_USERNAME"@"$REMOTE_HOST":"$REMOTE_PATH/$screenshot_filename_no_spaces"
    url="https://$REMOTE_URL/$screenshot_filename_no_spaces"
elif [ "$SERVICE" == "imgur" ]; then
    # Upload to Imgur
    response=$(curl --silent --request POST --url https://api.imgur.com/3/image --header "Authorization: Client-ID $IMGUR_CLIENT_ID" --form image=@"$latest_screenshot")
    imgur_url=$(echo "$response" | jq -r '.data.link')
    if [ -z "$imgur_url" ]; then
        echo "Error uploading to Imgur."
        exit 1
    fi
    url="$imgur_url"
fi
# Copy the URL to clipboard using wl-clipboard
echo -n "$url" | wl-copy

echo "Screenshot uploaded"
echo "URL: $url"
echo "Copied to clipboard."
